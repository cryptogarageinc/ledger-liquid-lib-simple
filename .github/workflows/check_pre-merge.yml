name: pre-merge check

on: 
  push:
    branches:
    - master
    - develop
    - features/sprint*
  pull_request:
    branches:
    - master
    - develop
    - features/sprint*

jobs:
  logic-test:
    name: validation logic test
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-20.04]
        node: [16, 18]

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      continue-on-error: true
      timeout-minutes: 1
      with:
        node-version: ${{ matrix.node }}
    - name: setup-node retry
      uses: actions/setup-node@v3
      timeout-minutes: 1
      with:
        node-version: ${{ matrix.node }}
    - name: install_libusb
      if: runner.os == 'Linux'
      run: sudo apt install libusb-1.0-0-dev libudev-dev libusb-1.0-doc
    - name: dump node version
      id: node_ver
      run: |
        node_ver="$(node --version)"
        echo "node_version=$node_ver" >> $GITHUB_OUTPUT
        echo "node_version=$node_ver"
      shell: bash
    - name: node_modules-useCache
      uses: actions/cache@v3
      id: node_cache
      with:
        path: node_modules
        key: node-${{ runner.os }}-${{ matrix.node }}-${{ steps.node_ver.outputs.node_version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: node-${{ runner.os }}-${{ matrix.node }}-${{ steps.node_ver.outputs.node_version }}-${{ hashFiles('**/package-lock.json') }}
    - name: npm info
      if: steps.node_cache.outputs.cache-hit != 'true'
      id: npm_info
      run: |
        npm --version
        echo "npm_cachedir=$(npm config get cache)" >> $GITHUB_OUTPUT
      shell: bash
    - name: use npm cache
      if: steps.node_cache.outputs.cache-hit != 'true'
      uses: actions/cache@v3
      id: npm_cache
      with:
        path: ${{ steps.npm_info.outputs.npm_cachedir }}
        key: npm-${{ runner.os }}-${{ matrix.node }}-${{ steps.node_ver.outputs.node_version }}-0
        restore-keys: |
          npm-${{ runner.os }}-${{ matrix.node }}-${{ steps.node_ver.outputs.node_version }}-
    - name: npm_install
      if: steps.node_cache.outputs.cache-hit != 'true'
      env:
        CFDJS_UNUSE_ASSET: true
      run: |
        npm set progress=false
        npm ci
    - name: test
      if: matrix.node == '16'
      run: npm run test
    - name: test node.js 18 or higher
      if: matrix.node != '16'
      run: NODE_OPTIONS=--no-experimental-fetch npm run test
      shell: bash
    - name: lint_check
      if: runner.os == 'Linux'
      run: npm run eslint_check
